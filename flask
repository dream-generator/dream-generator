# Flask App for Dream Generator Web Interface

from flask import Flask, send_file, Response
import io
import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import spectrogram
from scipy.io import wavfile
import random
import string

app = Flask(__name__)

# === Dream Generator Core ===
sample_rate = 44100
def generate_dream_waveform(duration=8):
    t = np.linspace(0, duration, int(sample_rate * duration))
    base_freq = 220 + 60 * np.random.rand()
    mod = np.sin(2 * np.pi * base_freq * t * np.random.rand())
    fade = np.linspace(1, 0, len(t))
    waveform = 0.3 * np.sin(2 * np.pi * base_freq * t + mod) * fade
    return waveform.astype(np.float32)

# === Route to serve audio ===
@app.route('/audio')
def serve_audio():
    wave = generate_dream_waveform()
    wave_int16 = np.int16(wave * 32767)
    wav_io = io.BytesIO()
    wavfile.write(wav_io, sample_rate, wave_int16)
    wav_io.seek(0)
    return send_file(wav_io, mimetype='audio/wav', as_attachment=False, download_name='dream.wav')

# === Route to serve animated spectrogram ===
@app.route('/visual')
def serve_visual():
    wave = generate_dream_waveform()
    f, t_vals, Sxx = spectrogram(wave, fs=sample_rate, nperseg=512, noverlap=256)
    Sxx_dB = 10 * np.log10(Sxx + 1e-8)

    fig, ax = plt.subplots(figsize=(10, 5))
    ax.axis('off')
    ax.pcolormesh(t_vals, f, Sxx_dB, shading='gouraud', cmap='inferno')
    
    # Overlay some neutral, dreamlike text
    dream_text = ''.join(random.choices(string.ascii_letters + ' ', k=20))
    ax.text(0.5, 0.95, dream_text, transform=ax.transAxes, ha='center', va='top', color='white', fontsize=12)
    
    img_io = io.BytesIO()
    plt.savefig(img_io, format='png', bbox_inches='tight', pad_inches=0)
    img_io.seek(0)
    plt.close()
    return send_file(img_io, mimetype='image/png')

# === Root page just forwards to visual/audio ===
@app.route('/')
def root():
    html = '''
    <html>
    <head><title>Recursive Dream</title></head>
    <body style="margin:0;background:black;">
        <img src="/visual" style="width:100%;height:auto;display:block;margin:auto;" />
        <audio src="/audio" autoplay loop></audio>
    </body>
    </html>
    '''
    return Response(html, mimetype='text/html')

if __name__ == '__main__':
    app.run(debug=True)
